version: '3.8'

services:
  # PostgreSQL para Keycloak
  keycloak-db:
    image: postgres:15-alpine
    container_name: keycloak-postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak_password
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    networks:
      - auth-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: fiap-keycloak
    command:
      - start-dev
      - --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./keycloak/import:/opt/keycloak/data/import
    depends_on:
      keycloak-db:
        condition: service_healthy
    networks:
      - auth-network
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e 'GET /health/ready HTTP/1.1\r\nhost: 127.0.0.1\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  # Auth Service (Production)
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fiap-auth-service
    environment:
      NODE_ENV: production
      PORT: 3002
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: fiap-pos-tech
      KEYCLOAK_CLIENT_ID: pos-tech-api
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET:-your-client-secret-here}
      KEYCLOAK_ADMIN_USERNAME: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001
    ports:
      - "3002:3002"
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - auth-network
    restart: unless-stopped

  # Auth Service (Development)
  auth-service-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: fiap-auth-service-dev
    environment:
      NODE_ENV: development
      PORT: 3002
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: fiap-pos-tech
      KEYCLOAK_CLIENT_ID: pos-tech-api
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET:-your-client-secret-here}
      KEYCLOAK_ADMIN_USERNAME: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      ALLOWED_ORIGINS: http://localhost:3000,http://localhost:3001
    ports:
      - "3002:3002"
    volumes:
      - ./src:/app/src
      - /app/node_modules
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - auth-network
    profiles:
      - dev

networks:
  auth-network:
    driver: bridge

volumes:
  keycloak_postgres_data:
    driver: local
